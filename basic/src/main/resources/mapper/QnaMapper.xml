<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hframework.myna.config.dao.QnaMapper" >
  <resultMap id="BaseResultMap" type="com.hframework.myna.config.domain.model.Qna" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="keyword" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answer_type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="options_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="semantic_parsers" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="creator_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="modifier_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="modify_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="task_id" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, description, keyword, answer_type, options_id, semantic_parsers, `status`, creator_id, 
    create_time, modifier_id, modify_time, task_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hframework.myna.config.domain.model.Qna_Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `qna`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitEnd != null and limitEnd != 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `qna`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `qna`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hframework.myna.config.domain.model.Qna_Example" >
    delete from `qna`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hframework.myna.config.domain.model.Qna" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `qna` (description, keyword, answer_type, 
      options_id, semantic_parsers, `status`, 
      creator_id, create_time, modifier_id, 
      modify_time, task_id)
    values (#{description,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, #{answerType,jdbcType=TINYINT}, 
      #{optionsId,jdbcType=BIGINT}, #{semanticParsers,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{creatorId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{taskId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hframework.myna.config.domain.model.Qna" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `qna`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="description != null" >
        description,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
      <if test="answerType != null" >
        answer_type,
      </if>
      <if test="optionsId != null" >
        options_id,
      </if>
      <if test="semanticParsers != null" >
        semantic_parsers,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifierId != null" >
        modifier_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="answerType != null" >
        #{answerType,jdbcType=TINYINT},
      </if>
      <if test="optionsId != null" >
        #{optionsId,jdbcType=BIGINT},
      </if>
      <if test="semanticParsers != null" >
        #{semanticParsers,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null" >
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hframework.myna.config.domain.model.Qna_Example" resultType="java.lang.Integer" >
    select count(*) from `qna`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `qna`
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.keyword != null" >
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.answerType != null" >
        answer_type = #{record.answerType,jdbcType=TINYINT},
      </if>
      <if test="record.optionsId != null" >
        options_id = #{record.optionsId,jdbcType=BIGINT},
      </if>
      <if test="record.semanticParsers != null" >
        semantic_parsers = #{record.semanticParsers,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifierId != null" >
        modifier_id = #{record.modifierId,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `qna`
    set id = #{record.id,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      answer_type = #{record.answerType,jdbcType=TINYINT},
      options_id = #{record.optionsId,jdbcType=BIGINT},
      semantic_parsers = #{record.semanticParsers,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      creator_id = #{record.creatorId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modifier_id = #{record.modifierId,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      task_id = #{record.taskId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hframework.myna.config.domain.model.Qna" >
    update `qna`
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="answerType != null" >
        answer_type = #{answerType,jdbcType=TINYINT},
      </if>
      <if test="optionsId != null" >
        options_id = #{optionsId,jdbcType=BIGINT},
      </if>
      <if test="semanticParsers != null" >
        semantic_parsers = #{semanticParsers,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null" >
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hframework.myna.config.domain.model.Qna" >
    update `qna`
    set description = #{description,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      answer_type = #{answerType,jdbcType=TINYINT},
      options_id = #{optionsId,jdbcType=BIGINT},
      semantic_parsers = #{semanticParsers,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      task_id = #{taskId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>